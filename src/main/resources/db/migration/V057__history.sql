SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE if EXISTS student_reg_history_tbl;
CREATE TABLE student_reg_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   student_register_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   first_name VARCHAR(255) NULL,
   middle_name VARCHAR(255) NULL,
   last_name VARCHAR(255) NULL,
   gender VARCHAR(255) NULL,
   birth_date date NULL,
   age BIGINT NULL,
   birth_place VARCHAR(255) NULL,
   nationality VARCHAR(255) NULL,
   caste VARCHAR(255) NULL,
   religion VARCHAR(255) NULL,
   mother_tongue VARCHAR(255) NULL,
   home_town VARCHAR(255) NULL,
   aadhar_no VARCHAR(255) NULL,
   saral_id VARCHAR(255) NULL,
   student_image VARCHAR(255) NULL,
   father_name VARCHAR(255) NULL,
   father_occupation VARCHAR(255) NULL,
   mother_name VARCHAR(255) NULL,
   mother_occupation VARCHAR(255) NULL,
   office_address VARCHAR(255) NULL,
   current_address VARCHAR(255) NULL,
   same_as_current_address BIT(1) NULL,
   permanent_address VARCHAR(255) NULL,
   phone_no_home BIGINT NULL,
   mobile_no BIGINT NULL,
   alt_mobile_no BIGINT NULL,
   email_id VARCHAR(255) NULL,
   general_register_no VARCHAR(255) NULL,
   name_of_previous_school VARCHAR(255) NULL,
   std_in_previous_school VARCHAR(255) NULL,
   result VARCHAR(255) NULL,
   date_of_admission date NULL,
   student_unique_no VARCHAR(255) NULL,
   type_of_student VARCHAR(255) NULL,
   nts VARCHAR(255) NULL,
   concession_amount BIGINT NULL,
   lc_no BIGINT NULL,
   general_conduct VARCHAR(255) NULL,
   progress VARCHAR(255) NULL,
   dol date NULL,
   std_in_which_and_when VARCHAR(255) NULL,
   reason_of_leave_school VARCHAR(255) NULL,
   remarks VARCHAR(255) NULL,
   student_id VARCHAR(255) NULL,
   operation_type VARCHAR(255) NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   status BIT(1) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   CONSTRAINT pk_student_reg_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS student_adm_history_tbl;
CREATE TABLE student_adm_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   student_admission_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   new_admitted_standard BIGINT NULL,
   student_id BIGINT NULL,
   academic_year VARCHAR(255) NULL,
   division VARCHAR(255) NULL,
   student_type INT NULL,
   student_group INT NULL,
   date_of_admission date NULL,
   is_hostel BIT(1) NULL,
   is_bus_concession BIT(1) NULL,
   is_vacation BIT(1) NULL,
   bus_concession_amount BIGINT NULL,
   is_scholarship BIT(1) NULL,
   type_of_student VARCHAR(255) NULL,
   nts VARCHAR(255) NULL,
   concession_amount BIGINT NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   status BIT(1) NULL,
   reason VARCHAR(255) NULL,
   paid_amount DOUBLE NULL,
   outstanding DOUBLE NULL,
   refund_amount DOUBLE NULL,
   CONSTRAINT pk_student_adm_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS ledger_master_history_tbl;
CREATE TABLE ledger_master_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   ledger_master_id BIGINT NULL,
   student_id BIGINT NULL,
   ledger_name VARCHAR(255) NULL,
   ledger_code VARCHAR(255) NULL,
   unique_code VARCHAR(255) NULL,
   mailing_name VARCHAR(255) NULL,
   opening_bal_type VARCHAR(255) NULL,
   opening_bal DOUBLE NULL,
   address VARCHAR(255) NULL,
   pincode BIGINT NULL,
   email VARCHAR(255) NULL,
   mobile BIGINT NULL,
   taxable BIT(1) NULL,
   gstin VARCHAR(255) NULL,
   state_code VARCHAR(255) NULL,
   registration_type BIGINT NULL,
   date_of_registration date NULL,
   pancard VARCHAR(255) NULL,
   bank_name VARCHAR(255) NULL,
   account_number VARCHAR(255) NULL,
   ifsc VARCHAR(255) NULL,
   bank_branch VARCHAR(255) NULL,
   tax_type VARCHAR(255) NULL,
   slug_name VARCHAR(255) NULL,
   created_by BIGINT NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_by BIGINT NULL,
   updated_at datetime NULL,
   status BIT(1) NULL,
   under_prefix VARCHAR(255) NULL,
   is_deleted BIT(1) NULL,
   is_default_ledger BIT(1) NULL,
   is_private BIT(1) NULL,
   credit_days INT NULL,
   applicable_from VARCHAR(255) NULL,
   food_license_no VARCHAR(255) NULL,
   tds BIT(1) NULL,
   tds_applicable_date date NULL,
   tcs BIT(1) NULL,
   tcs_applicable_date date NULL,
   district VARCHAR(255) NULL,
   principles_name VARCHAR(255) NULL,
   principles_group_name VARCHAR(255) NULL,
   foundations_name VARCHAR(255) NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   balancing_method_name VARCHAR(255) NULL,
   associate_group_name VARCHAR(255) NULL,
   CONSTRAINT pk_ledger_master_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS ledger_balance_summary_history_tbl;
CREATE TABLE ledger_balance_summary_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   ledger_balance_summary_id BIGINT NULL,
   foundations_name VARCHAR(255) NULL,
   principles_name VARCHAR(255) NULL,
   principles_group_name VARCHAR(255) NULL,
   associate_group_name VARCHAR(255) NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   ledger_master_name VARCHAR(255) NULL,
   debit DOUBLE NULL,
   credit DOUBLE NULL,
   opening_bal DOUBLE NULL,
   closing_bal DOUBLE NULL,
   balance DOUBLE NULL,
   under_prefix VARCHAR(255) NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   status BIT(1) NULL,
   CONSTRAINT pk_ledger_balance_summary_history_tbl PRIMARY KEY (id)
);

DROP TABLE if EXISTS ledger_transaction_details_history_tbl;
CREATE TABLE ledger_transaction_details_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   ledger_transaction_details_id BIGINT NULL,
   principles_name VARCHAR(255) NULL,
   principles_group_name VARCHAR(255) NULL,
   foundations_name VARCHAR(255) NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   transaction_type_name VARCHAR(255) NULL,
   balancing_method_name VARCHAR(255) NULL,
   associate_group_name VARCHAR(255) NULL,
   student_id BIGINT NULL,
   payment_status VARCHAR(255) NULL,
   debit DOUBLE NULL,
   credit DOUBLE NULL,
   opening_bal DOUBLE NULL,
   closing_bal DOUBLE NULL,
   transaction_date date NULL,
   payment_date date NULL,
   transaction_id BIGINT NULL,
   tranx_type VARCHAR(255) NULL,
   financial_year VARCHAR(255) NULL,
   under_prefix VARCHAR(255) NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   updated_at datetime NULL,
   status BIT(1) NULL,
   CONSTRAINT pk_ledger_transaction_details_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS fees_transaction_summary_history_tbl;
CREATE TABLE fees_transaction_summary_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   fees_transaction_summary_id BIGINT NULL,
   total_fees DOUBLE NULL,
   paid_amount DOUBLE NULL,
   balance DOUBLE NULL,
   student_type INT NULL,
   student_group INT NULL,
   concession_type INT NULL,
   is_manual BIT(1) NULL,
   concession_amount INT NULL,
   operation_type VARCHAR(255) NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   status BIT(1) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   outlet_id BIGINT NULL,
   branch_id BIGINT NULL,
   standard_name BIGINT NULL,
   division_name VARCHAR(255) NULL,
   academic_year VARCHAR(255) NULL,
   student_id BIGINT NULL,
   fees_master_id BIGINT NULL,
   CONSTRAINT pk_fees_transaction_summary_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS fees_transaction_detail_history_tbl;
CREATE TABLE fees_transaction_detail_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   fee_transaction_detail_id BIGINT NULL,
   receipt_no VARCHAR(255) NULL,
   transaction_date date NULL,
   head_fee DOUBLE NULL,
   opening DOUBLE NULL,
   amount DOUBLE NULL,
   balance DOUBLE NULL,
   paid_amount DOUBLE NULL,
   concession_amount DOUBLE NULL,
   special_concession_amount DOUBLE NULL,
   installment_no INT NULL,
   payment_mode INT NULL,
   payment_no VARCHAR(255) NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   status BIT(1) NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   fees_transaction_summary_id BIGINT NULL,
   fees_head_id BIGINT NULL,
   sub_fees_head_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   CONSTRAINT pk_fees_transaction_detail_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS tranx_sales_invoice_history_tbl;
CREATE TABLE tranx_sales_invoice_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   tranx_sales_invoice_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   sundry_debtors_id BIGINT NULL,
   fees_account_ledger_id BIGINT NULL,
   fees_asso_account_ledger_id BIGINT NULL,
   sales_discount_ledger_id BIGINT NULL,
   fiscal_year_id BIGINT NULL,
   sales_serial_number BIGINT NULL,
   sales_invoice_no VARCHAR(255) NULL,
   bill_date date NULL,
   `reference` VARCHAR(255) NULL,
   round_off DOUBLE NULL,
   total_base_amount DOUBLE NULL,
   total_amount DOUBLE NULL,
   totalcgst DOUBLE NULL,
   totalqty BIGINT NULL,
   totalsgst DOUBLE NULL,
   totaligst DOUBLE NULL,
   sales_discount_amount DOUBLE NULL,
   sales_discount_per DOUBLE NULL,
   total_sales_discount_amt DOUBLE NULL,
   taxable_amount DOUBLE NULL,
   status BIT(1) NULL,
   financial_year VARCHAR(255) NULL,
   narration VARCHAR(255) NULL,
   operations VARCHAR(255) NULL,
   operation_type VARCHAR(255) NULL,
   created_by BIGINT NULL,
   created_at datetime NULL,
   updated_by BIGINT NULL,
   updated_at datetime NULL,
   balance DOUBLE NULL,
   CONSTRAINT pk_tranx_sales_invoice_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS tranx_sales_invoice_details_history_tbl;
CREATE TABLE tranx_sales_invoice_details_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   tranx_sales_invoice_details_id BIGINT NULL,
   fiscal_year_id BIGINT NULL,
   sales_invoice_id BIGINT NULL,
   fee_head_id BIGINT NULL,
   amount DOUBLE NULL,
   status BIT(1) NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   created_by BIGINT NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_by BIGINT NULL,
   updated_at datetime NULL,
   CONSTRAINT pk_tranx_sales_invoice_details_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS tranx_journal_master_history_tbl;
CREATE TABLE tranx_journal_master_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   tranx_journal_master_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   fiscal_year_id BIGINT NULL,
   journal_no VARCHAR(255) NULL,
   journal_sr_no DOUBLE NOT NULL,
   transcation_date date NULL,
   total_amt DOUBLE NOT NULL,
   status BIT(1) NOT NULL,
   narrations VARCHAR(255) NULL,
   financial_year VARCHAR(255) NULL,
   fee_receipt_no VARCHAR(255) NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   created_by BIGINT NULL,
   CONSTRAINT pk_tranx_journal_master_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS tranx_journal_details_history_tbl;
CREATE TABLE tranx_journal_details_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   tranx_journal_details_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   ledger_master_id BIGINT NULL,
   journal_master_id BIGINT NULL,
   type VARCHAR(255) NULL,
   ledger_type VARCHAR(255) NULL,
   paid_amount DOUBLE NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   created_by BIGINT NULL,
   status BIT(1) NULL,
   CONSTRAINT pk_tranx_journal_details_history_tbl PRIMARY KEY (id)
);
DROP TABLE if EXISTS student_transport_history_tbl;
CREATE TABLE student_transport_history_tbl (
  id BIGINT AUTO_INCREMENT NOT NULL,
   student_transport_id BIGINT NULL,
   student_type INT NULL,
   student_bus_id BIGINT NULL,
   academic_year_id VARCHAR(255) NULL,
   student_register_id BIGINT NULL,
   standard_id BIGINT NULL,
   branch_id BIGINT NULL,
   outlet_id BIGINT NULL,
   created_by BIGINT NULL,
   updated_by BIGINT NULL,
   status BIT(1) NULL,
   operation_type VARCHAR(255) NULL,
   created_at datetime NULL,
   updated_at datetime NULL,
   CONSTRAINT pk_student_transport_history_tbl PRIMARY KEY (id)
);
SET FOREIGN_KEY_CHECKS = 1;
